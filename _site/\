<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>session and cookie</title>
    <meta name="description" content="">

    <!-- style -->
    <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Open+Sans:300,400,600">
    <link rel="stylesheet" href=" /css/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href=" /css/customer/syntax.css ">
    <link rel="stylesheet" href=" /css/customer/customer.css ">
    <!-- bootstrap3 -->
    <link rel="stylesheet" href=" /css/bootstrap3/css/bootstrap.min.css ">
    <link rel="canonical" href="http://smileboywtu.github.io/%5C">

    <!-- isso comment system -->
    <script data-isso="//121.42.178.129" data-isso-lang="en" data-isso-css="true" src="//121.42.178.129/js/embed.min.js"></script>

    <!-- bootstrap 3 -->
    <script src=" /css/bootstrap3/js/jquery-1.12.0.min.js "></script>
    <script src=" /css/bootstrap3/js/bootstrap.min.js "></script>

    <!-- owner special recommendation -->
    <script>
        $.get(
            "http://121.42.178.129/recommendation/music",
            function(data){
                $('#recommendation').append(data);
            },"html");
    </script>

    
    <script>
        $(document).ready(function() {
            $("#id-page-session and cookie-title").addClass("active");
        });
    </script>
    

</head>


<body>
    <div>
        <header>

    <nav class="navbar navbar-default">
        <div class="container-fluid">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/">Coder Life</a>
            </div>

            <div class="collapse navbar-collapse">
                <ul class="nav navbar-nav">
                    <li id="id-page-Projects-title">
                        <a href=" /Projects/ ">Projects</a>
                    </li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Explore <span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li id="id-page-About-title"><a href=" /About/ ">About</a></li>
                            <li role="separator" class="divider"></li>
                            <li><a href="https://github.com/smileboywtu"><i class="fa fa-github"></i> GitHub</a></li>
                            <li><a href="http://smileboywtu.deercv.com"><i class="fa fa-user"></i> Deer CV</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

</header>


        <div class="container-fluid">
            <div class="row default">
                <div class="col-lg-6">
                    <div class="post" itemscope itemtype="http://schema.org/BlogPosting">

    <h2 class="post-title">session and cookie</h2>

    <p class="post-meta">
        <small>
            <time datetime="2016-04-20T10:02:00+08:00" itemprop="datePublished">
                Apr 20, 2016
            </time>
        </small>
    <p>

    <div class="post-content">
        ## What is a "Cookie"?

A cookie is a small piece of text stored on a user's computer by their browser.
Common uses for cookies are authentication, storing of site preferences, shopping
cart items, and server session identification.

Each time the users' web browser interacts with a web server it will pass the
cookie information to the web server. Only the cookies stored by the browser that
relate to the domain in the requested URL will be sent to the server. This means
that cookies that relate to www.example.com will not be sent to www.exampledomain.com.

In essence, a cookie is a great way of linking one page to the next for a user's
interaction with a web site or web application.

## What is a "Session"?

A session can be defined as a server-side storage of information that is desired
to persist throughout the user's interaction with the web site or web application.

Instead of storing large and constantly changing information via cookies in the
user's browser, only a unique identifier is stored on the client side (called a
"session id"). This session id is passed to the web server every time the browser
makes an HTTP request (ie a page link or AJAX request). The web application
pairs this session id with it's internal database and retrieves the stored variables
for use by the requested page.

## Setting and reading cookies

Using the [cookie_set] method we can set cookies to store information for use in
later pages. The following code shows how easy it is to store a user's details
such as their name and email address which they may have entered on a "Contact
Us" form. This would then allow later pages to pre-populate forms with this information.

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">Cookie_Set</span><span class="p">(</span>
    <span class="s1">'UserDetails'</span><span class="o">=</span><span class="s1">'John Doe|john.doe@example.com'</span><span class="p">,</span>
    <span class="o">-</span><span class="nx">Domain</span><span class="o">=</span><span class="s1">'example.com'</span><span class="p">,</span>
    <span class="o">-</span><span class="nx">Expires</span><span class="o">=</span><span class="s1">'1440'</span><span class="p">,</span>
    <span class="o">-</span><span class="nx">Path</span><span class="o">=</span><span class="s1">'/'</span>
<span class="p">)</span></code></pre></figure>

In this example the cookie named "UserDetails" contains the user name and email
address delimited by a "pipe" character. This can be read and interpreted, then
output in the following code.

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="nx">local</span><span class="p">(</span> <span class="nx">userDetails</span> <span class="o">=</span> <span class="nx">decode_url</span><span class="p">(</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">'UserDetails'</span><span class="p">))</span><span class="o">-&gt;</span><span class="nx">split</span><span class="p">(</span><span class="s1">'|'</span><span class="p">))</span>

<span class="k">if</span><span class="p">(</span><span class="err">#</span><span class="nx">userDetails</span><span class="o">-&gt;</span><span class="nx">size</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span><span class="o">^</span>
    <span class="s1">'User Name = '</span><span class="o">+</span><span class="err">#</span><span class="nx">userDetails</span><span class="o">-&gt;</span><span class="nx">get</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
    <span class="s1">'&lt;br /&gt;'</span>
    <span class="s1">'Email Address = '</span><span class="o">+</span><span class="err">#</span><span class="nx">userDetails</span><span class="o">-&gt;</span><span class="nx">get</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="o">^</span><span class="p">}</span></code></pre></figure>

## Using Sessions

To store information that is not appropriate to store client-side, we use sessions.
Lasso has built in session handling, and deals with the setting and retrieval of
the cookie itself. It will automatically set and retrieve the session id, which
is the only thing stored client-side.

To set up a new session, we first start the session, then add to it the variables
we would like to store in it. Those variables are stored within Lasso's session database.

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="c1">// Start the session.</span>
<span class="nx">session_start</span><span class="p">(</span>
	<span class="s1">'mySessionName'</span><span class="p">,</span>
	<span class="o">-</span><span class="nx">expires</span> <span class="o">=</span> <span class="mi">1440</span><span class="p">,</span>
	<span class="o">-</span><span class="nx">usecookie</span><span class="o">=</span><span class="kc">true</span>
<span class="p">)</span>

<span class="c1">// Add variables to the session</span>
<span class="k">if</span><span class="p">(</span><span class="nx">session_result</span><span class="p">(</span><span class="s1">'mySessionName'</span><span class="p">)</span> <span class="o">!=</span> <span class="s1">'load'</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="nx">session_addVar</span><span class="p">(</span><span class="s1">'mySessionName'</span><span class="p">,</span> <span class="s1">'sv_userId'</span><span class="p">)</span>
	<span class="nx">session_addVar</span><span class="p">(</span><span class="s1">'mySessionName'</span><span class="p">,</span> <span class="s1">'sv_userName'</span><span class="p">)</span>
	<span class="nx">session_addVar</span><span class="p">(</span><span class="s1">'mySessionName'</span><span class="p">,</span> <span class="s1">'sv_userEmail'</span><span class="p">)</span>
	<span class="nx">session_addVar</span><span class="p">(</span><span class="s1">'mySessionName'</span><span class="p">,</span> <span class="s1">'sv_favouriteColour'</span><span class="p">)</span>
<span class="p">}</span>

<span class="o">!</span><span class="nx">var_defined</span><span class="p">(</span><span class="s1">'sv_userId'</span><span class="p">)</span> <span class="p">?</span> 	<span class="kd">var</span><span class="p">(</span><span class="s1">'sv_userId'</span> <span class="o">=</span> <span class="nx">integer</span><span class="p">)</span>
<span class="o">!</span><span class="nx">var_defined</span><span class="p">(</span><span class="s1">'sv_userName'</span><span class="p">)</span> <span class="p">?</span> 	<span class="kd">var</span><span class="p">(</span><span class="s1">'sv_userName'</span> <span class="o">=</span> <span class="nx">string</span><span class="p">)</span>
<span class="o">!</span><span class="nx">var_defined</span><span class="p">(</span><span class="s1">'sv_userEmail'</span><span class="p">)</span> <span class="p">?</span> 	<span class="kd">var</span><span class="p">(</span><span class="s1">'sv_userEmail'</span> <span class="o">=</span> <span class="nx">string</span><span class="p">)</span>
<span class="o">!</span><span class="nx">var_defined</span><span class="p">(</span><span class="s1">'sv_favouriteColour'</span><span class="p">)</span> <span class="p">?</span> 	<span class="kd">var</span><span class="p">(</span><span class="s1">'sv_favouriteColour'</span> <span class="o">=</span> <span class="s1">'red'</span><span class="p">)</span></code></pre></figure>

## Reference

[LassoSoft](http://www.lassosoft.com/Tutorial-Understanding-Cookies-and-Sessions)

    </div>

    
    <hr>
    <div class="post-comments">
        <section id="isso-thread"></section>
    </div>

    

</div>

                </div>
                <div class="col-lg-6">
                    <div class="recommendation-default">
                        <div class="table-responsive" id="recommendation">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <footer class="footer">
    <div class="container">

        <div>
            <a href="https://github.com/smileboywtu">
                <span class="icon"><svg viewBox="0 0 16 16"><path fill="#828282" d="M7.999,0.431c-4.285,0-7.76,3.474-7.76,7.761 c0,3.428,2.223,6.337,5.307,7.363c0.388,0.071,0.53-0.168,0.53-0.374c0-0.184-0.007-0.672-0.01-1.32 c-2.159,0.469-2.614-1.04-2.614-1.04c-0.353-0.896-0.862-1.135-0.862-1.135c-0.705-0.481,0.053-0.472,0.053-0.472 c0.779,0.055,1.189,0.8,1.189,0.8c0.692,1.186,1.816,0.843,2.258,0.645c0.071-0.502,0.271-0.843,0.493-1.037 C4.86,11.425,3.049,10.76,3.049,7.786c0-0.847,0.302-1.54,0.799-2.082C3.768,5.507,3.501,4.718,3.924,3.65 c0,0,0.652-0.209,2.134,0.796C6.677,4.273,7.34,4.187,8,4.184c0.659,0.003,1.323,0.089,1.943,0.261 c1.482-1.004,2.132-0.796,2.132-0.796c0.423,1.068,0.157,1.857,0.077,2.054c0.497,0.542,0.798,1.235,0.798,2.082 c0,2.981-1.814,3.637-3.543,3.829c0.279,0.24,0.527,0.713,0.527,1.437c0,1.037-0.01,1.874-0.01,2.129 c0,0.208,0.14,0.449,0.534,0.373c3.081-1.028,5.302-3.935,5.302-7.362C15.76,3.906,12.285,0.431,7.999,0.431z"/></svg>
</span>
            </a>
        </div>

        <div class="text-muted">
            <small>Designed By Smile Boy.</small>
        </div>

    </div>
</footer>

    </div>
</body>


</html>
